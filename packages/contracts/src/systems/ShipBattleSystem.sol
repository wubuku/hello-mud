// SPDX-License-Identifier: MIT
pragma solidity >=0.8.24;

/* Autogenerated file. Do not edit manually. */

import { System } from "@latticexyz/world/src/System.sol";
import { ShipBattle, ShipBattleData, ShipBattleIdGenerator } from "../codegen/index.sol";
import { ShipBattleMoveMade } from "./ShipBattleEvents.sol";
import { ShipBattleMakeMoveLogic } from "./ShipBattleMakeMoveLogic.sol";
import { IAppSystemErrors } from "./IAppSystemErrors.sol";

contract ShipBattleSystem is System, IAppSystemErrors {
  event ShipBattleMoveMadeEvent(uint256 indexed id, uint8 attackerCommand, uint8 defenderCommand, uint32 roundNumber, uint32 defenderDamageTaken, uint32 attackerDamageTaken, bool isBattleEnded, uint8 winner, uint64 nextRoundStartedAt, uint8 nextRoundMover, uint256 nextRoundAttackerShip, uint256 nextRoundDefenderShip);

  function shipBattleMakeMove(uint256 id, uint8 attackerCommand) public {
    ShipBattleData memory shipBattleData = ShipBattle.get(id);
    if (shipBattleData.initiatorRosterPlayerId == uint256(0) && shipBattleData.initiatorRosterSequenceNumber == uint32(0) && shipBattleData.responderRosterPlayerId == uint256(0) && shipBattleData.responderRosterSequenceNumber == uint32(0) && shipBattleData.status == uint8(0) && shipBattleData.endedAt == uint64(0)) {
      revert ShipBattleDoesNotExist(id);
    }
    ShipBattleMoveMade memory shipBattleMoveMade = ShipBattleMakeMoveLogic.verify(id, attackerCommand, shipBattleData);
    shipBattleMoveMade.id = id;
    emit ShipBattleMoveMadeEvent(shipBattleMoveMade.id, shipBattleMoveMade.attackerCommand, shipBattleMoveMade.defenderCommand, shipBattleMoveMade.roundNumber, shipBattleMoveMade.defenderDamageTaken, shipBattleMoveMade.attackerDamageTaken, shipBattleMoveMade.isBattleEnded, shipBattleMoveMade.winner, shipBattleMoveMade.nextRoundStartedAt, shipBattleMoveMade.nextRoundMover, shipBattleMoveMade.nextRoundAttackerShip, shipBattleMoveMade.nextRoundDefenderShip);
    ShipBattleData memory updatedShipBattleData = ShipBattleMakeMoveLogic.mutate(shipBattleMoveMade, shipBattleData);
    ShipBattle.set(id, updatedShipBattleData);
  }

}
