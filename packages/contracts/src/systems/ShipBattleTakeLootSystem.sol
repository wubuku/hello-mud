// SPDX-License-Identifier: MIT
pragma solidity >=0.8.24;

/* Autogenerated file. Do not edit manually. */

import { System } from "@latticexyz/world/src/System.sol";
import { ShipBattle, ShipBattleData, ShipBattleIdGenerator } from "../codegen/index.sol";
import { ShipBattleLootTaken } from "./ShipBattleEvents.sol";
import { ShipBattleTakeLootLogic } from "./ShipBattleTakeLootLogic.sol";
import { IAppSystemErrors } from "./IAppSystemErrors.sol";

contract ShipBattleTakeLootSystem is System, IAppSystemErrors {
  event ShipBattleLootTakenEvent(uint256 indexed id, uint8 choice, uint64 lootedAt, uint32 increasedExperience, uint16 newLevel, uint32 loserIncreasedExperience, uint16 loserNewLevel);

  function shipBattleTakeLoot(uint256 id, uint8 choice) public {
    ShipBattleData memory shipBattleData = ShipBattle.get(id);
    if (shipBattleData.initiatorRosterPlayerId == uint256(0) && shipBattleData.initiatorRosterSequenceNumber == uint32(0) && shipBattleData.responderRosterPlayerId == uint256(0) && shipBattleData.responderRosterSequenceNumber == uint32(0) && shipBattleData.status == uint8(0) && shipBattleData.endedAt == uint64(0)) {
      revert ShipBattleDoesNotExist(id);
    }
    ShipBattleLootTaken memory shipBattleLootTaken = ShipBattleTakeLootLogic.verify(id, choice, shipBattleData);
    shipBattleLootTaken.id = id;
    emit ShipBattleLootTakenEvent(shipBattleLootTaken.id, shipBattleLootTaken.choice, shipBattleLootTaken.lootedAt, shipBattleLootTaken.increasedExperience, shipBattleLootTaken.newLevel, shipBattleLootTaken.loserIncreasedExperience, shipBattleLootTaken.loserNewLevel);
    ShipBattleData memory updatedShipBattleData = ShipBattleTakeLootLogic.mutate(shipBattleLootTaken, shipBattleData);
    ShipBattle.set(id, updatedShipBattleData);
  }

}
