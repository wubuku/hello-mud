aggregates:
  Ship:
    metadata:
      Preprocessors: [ "CRUD_IT" ]
      CRUD_IT_NO_UPDATE: true
      CRUD_IT_NO_DELETE: true
      #ShouldIssuePublisherObject: true
    friends:
      - SkillProcess.CompleteShipProduction
      - Roster.CreateEnvironmentRoster
      - ShipBattle.TakeLoot
    id:
      name: Id
      type: u256
      generator:
        class: sequence
        tableName: ShipIdGenerator
    properties:
      #Owner:
      #  type: u256 # PlayerId
      RosterId:
        type: RosterId # Roaster the ship belongs to
        columnNames:
          - playerId
          - rosterSequenceNumber
      HealthPoints:
        type: u32
      Attack:
        type: u32
      Protection:
        type: u32
      Speed:
        type: u32
      #BuildingExpenses:
      #  itemType: ItemIdQuantityPair[]
      # Using itemType generates a corresponding Table.
      # There is no need to generate a table because this property is immutable from the moment the ship is built.
      BuildingExpensesItemIds:
        type: uint32[]
      BuildingExpensesQuantities:
        type: uint32[]
      Inventory:
        itemType: ItemIdQuantityPair

    methods:
      Create:
        metadata:
          IsOnlyOpenToFriends: true
        # isInternal: true
        result:
          isObjectReturned: true

      IncreaseShipInventory:
        metadata:
          IsOnlyOpenToFriends: true
        #isInternal: true
        parameters:
          Items:
            itemType: ItemIdQuantityPair
        event:
          name: ShipInventoryIncreased