
valueObjects:
  SailIntermediatePoint:
    properties:
      Coordinates:
        type: Coordinates
      SegmentShouldStartAt:
        type: u64
        description: "The segment after this point should start at this time"

  RosterCleanUpBattleResult:
    properties:
      WinnerRemainingShipIds:
        type: uint256[]
      WinnerNewSpeed:
        type: u32
      LoserDestroyedShipIds:
        type: uint256[]
      Loot:
        itemType: ItemIdQuantityPair
        isList: true

  TwoRostersLocationUpdateParams:
    properties:
      Coordinates:
        # Current roster ("from roster") coordinates
        type: Coordinates
      UpdatedSailSeg:
        # Current roster ("from roster") updated sail segment index
        type: u16
      ToRosterCoordinates:
        # "To roster" coordinates
        type: Coordinates
      ToRosterUpdatedSailSeg:
        # "To roster" updated sail segment index
        type: u16
      UpdatedAt:
        # Updated at timestamp
        type: u64



aggregates:
  Roster:
    #metadata:
    #  Preprocessors: [ "CRUD_IT" ]
    #  CRUD_IT_NO_UPDATE: true
    #  CRUD_IT_NO_DELETE: true
    #  TrustFriendsAsAccountDelegatees: true
    friends:
      - Player.ClaimIsland
      - ShipBattle.InitiateBattle
      - ShipBattle.MakeMove
      - ShipBattle.TakeLoot
      #- Player.NftHolderClaimIsland
      - SkillProcess.CompleteShipProduction
      - AggregatorService
    id:
      name: RosterId
      type: RosterId
    properties:
      Status:
        type: u8
      Speed:
        type: u32
      BaseExperience:
        type: u32
        description: "The base experience value gained by the player when the roster is destroyed"
      EnvironmentOwned:
        type: bool
        description: "Whether the roster is owned by the environment"
      UpdatedCoordinates:
        type: Coordinates
        description: "The last updated coordinates"
      CoordinatesUpdatedAt:
        type: u64
      TargetCoordinates:
        type: Coordinates
      OriginCoordinates:
        type: Coordinates
      SailDuration:
        type: u64
      SetSailAt:
        type: u64
      CurrentSailSegment:
        type: u16
        description: "The current sail segment index, starting from 0"
      ShipBattleId:
        type: u256
      ShipIds:
        type: uint256[]
      SailIntermediatePoints:
        itemType: SailIntermediatePoint
        isList: true
        tableName: SailIntPoint
        indexColumnName: index
        itemColumnNames:
          - coordinatesX
          - coordinatesY
          - segmentShouldStartAt

    methods:
      Create:
        metadata:
          IsOnlyOpenToFriends: true
          # IsCallFromEnabled: true
        # isInternal: true
        isCreationCommand: true
        parameters:
          Coordinates:
            type: Coordinates
        result:
          isObjectReturned: true
        event:
          name: RosterCreated
        #  isObjectShared: true # Share the object after created.

      CreateEnvironmentRoster:
        isCreationCommand: true
        requiredPermission: __NamespaceOwner__ # "__Publisher__"
        #metadata:
        #  ParametersIncludedInMutationFunction: [ "Clock" ]
        parameters:
          Coordinates:
            type: Coordinates
          ShipResourceQuantity:
            type: u32
          ShipBaseResourceQuantity:
            type: u32
          BaseExperience:
            type: u32
          #Clock:
          #  referenceType: Clock
          #  isIgnoredInEvent: true
        event:
          name: EnvironmentRosterCreated
          #isObjectShared: true

      AddShip:
        metadata:
          IsOnlyOpenToFriends: true
          # IsCallFromEnabled: true
        # isInternal: true
        parameters:
          ShipId:
            type: u256 #Ship
          Position:
            type: u64
            #optional: true
        event:
          name: RosterShipAdded


      SetSail:
        metadata:
          IsOnlyOpenToFriends: true
          # IsCallFromEnabled: true
          MudSystemName: RosterSailingSystem
          DisableFlatteningForParameters: ["UpdateLocationParams"]
        #requiredPermission: Owner # TODO: implement "Owner" permission?
        # isInternal: true
        parameters:
          # Player:
          #   referenceType: Player
          #   isIgnoredInEvent: true
          TargetCoordinates:
            type: Coordinates
          # Clock:
          #   referenceType: Clock
          #   isIgnoredInEvent: true
          # Energy:
          #   type: "Balance<ENERGY>"
          #   eventPropertyName: EnergyCost
          SailDuration:
            type: u64
          UpdateLocationParams:
            type: UpdateLocationParams
          IntermediatePoints:
            itemType: Coordinates
        event:
          name: RosterSetSail
          properties:
            SetSailAt:
              type: u64
            #EnergyCost:
            #  type: u64

      UpdateLocation:
        metadata:
          IsOnlyOpenToFriends: true
          # IsCallFromEnabled: true
          MudSystemName: RosterSailingSystem
          DisableFlatteningForParameters: ["UpdateLocationParams"]
        parameters:
          UpdateLocationParams:
            type: UpdateLocationParams
          #Clock:
          #  referenceType: Clock
          #  isIgnoredInEvent: true
        event:
          name: RosterLocationUpdated
          properties:
            CoordinatesUpdatedAt:
              type: u64
            NewStatus:
              type: u8
            OldStatus:
             type: u8
      

      CleanUpBattleDestroyedShips:
        metadata:
          IsOnlyOpenToFriends: true
          # IsCallFromEnabled: true
          MudSystemName: RosterCleaningSystem
        parameters:
          # Current roster is the winner
          LoserRosterId:
            type: RosterId
          Choice:
            type: u8
        result:
          type: RosterCleanUpBattleResult
        event:
          name: RosterBattleDestroyedShipsCleanedUp

      AdjustShipsPosition:
        parameters:
          #Player:
          #  referenceType: Player
          #  isIgnoredInEvent: true
          Positions:
            type: uint64[]
            #itemType: u64
          ShipIds:
            type: uint256[]
            #itemType: ID
        event:
          name: RosterShipsPositionAdjusted


      TransferShip:
        metadata:
          DisableFlatteningForParameters: ["LocationUpdateParams"]
          # To generate a separate system for this method due to contract size limitations
          MudSystemName: RosterShipTransferSystem
        parameters:
          ShipId:
            type: u256 #ID
          #FromRoster: # from current roster
          ToRoster:
            type: RosterId
          ToPosition:
            type: u64
          LocationUpdateParams:
            type: TwoRostersLocationUpdateParams
        event:
          name: RosterShipTransferred
          properties:
            TransferredAt:
              type: u64

      TransferMultiShips:
        description: "Transfer multiple ships from current roster to another roster"
        metadata:
          DisableFlatteningForParameters: ["LocationUpdateParams"]
          # To generate a separate system for this method due to contract size limitations
          MudSystemName: RosterShipTransferSystem
        parameters:
          ShipIds:
            type: uint256[]
          ToRoster:
            type: RosterId
          ToPosition:
            type: u64
            description: "All ships are transferred in or after this position"
          LocationUpdateParams:
            type: TwoRostersLocationUpdateParams
        event:
          name: RosterMultiShipsTransferred
          properties:
            TransferredAt:
              type: u64


      TransferShipInventory:
        metadata:
          # To generate a separate system for this method due to contract size limitations
          MudSystemName: RosterShipInventorySystem
        parameters:
          # Player:
          #   referenceType: Player
          #   isIgnoredInEvent: true
          FromShipId:
            type: u256 #ID
          ToShipId:
            type: u256 #ID
          ItemIdQuantityPairs:
            itemType: ItemIdQuantityPair
        event:
          name: RosterShipInventoryTransferred

      TakeOutShipInventory:
        metadata:
          MudSystemName: RosterShipInventorySystem
          DisableFlatteningForParameters: ["UpdateLocationParams"]
        inheritsFrom: RosterTemplate.InOutShipInventory
        #parameters:
        event:
          name: RosterShipInventoryTakenOut

      PutInShipInventory:
        metadata:
          MudSystemName: RosterShipInventorySystem
          DisableFlatteningForParameters: ["UpdateLocationParams"]
        inheritsFrom: RosterTemplate.InOutShipInventory
        #parameters:
        event:
          name: RosterShipInventoryPutIn

superObjects:
  RosterTemplate:
    isTemplate: true
    methods:
      InOutShipInventory:
        # metadata:
        #   DisableFlatteningForParameters: ["UpdateLocationParams"]
        parameters:
          #Player:
          #  referenceType: Player
          #  isMutableReference: true
          #  isIgnoredInEvent: true
          #Clock:
          #  referenceType: Clock
          #  isIgnoredInEvent: true
          ShipId:
            type: u256 #ID
          ItemIdQuantityPairs:
            itemType: ItemIdQuantityPair
          UpdateLocationParams:
            type: UpdateLocationParams


